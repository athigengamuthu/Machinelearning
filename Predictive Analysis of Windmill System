import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Load the windmill data from a CSV file (replace 'windmill_data.csv' with your dataset)
data = pd.read_csv('windmill_data.csv')

# Data preprocessing (handle missing values, feature engineering, etc.)
# For example, you might need to clean the data, handle missing values, and engineer features

# Define features (independent variables) and target (dependent variable)
X = data[['Wind_Speed', 'Temperature', 'Humidity']]
y = data['Energy_Production']

# Split the data into training and testing sets (80% training, 20% testing)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a linear regression model
model = LinearRegression()

# Train the model on the training data
model.fit(X_train, y_train)

# Make predictions on the test data
y_pred = model.predict(X_test)

# Evaluate the model using metrics such as Mean Squared Error (MSE) and R-squared (R2)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("Mean Squared Error:", mse)
print("R-squared:", r2)

# You can now use the trained model for making predictions on new data
# For example, predict energy production for a new data point
new_data_point = np.array([[wind_speed_value, temperature_value, humidity_value]])
predicted_energy_production = model.predict(new_data_point)
print("Predicted Energy Production:", predicted_energy_production)
